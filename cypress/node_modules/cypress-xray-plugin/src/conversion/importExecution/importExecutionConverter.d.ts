import { CypressRunResult as CypressRunResult_V_12 } from "../../types/cypress/12.0.0/api";
import { CypressRunResult as CypressRunResult_V_13 } from "../../types/cypress/13.0.0/api";
import { InternalOptions } from "../../types/plugin";
import { IXrayTestExecutionResults } from "../../types/xray/importTestExecutionResults";
type CypressRunResultType = CypressRunResult_V_12 | CypressRunResult_V_13;
/**
 * A class for converting Cypress run results into Xray JSON. Both Xray server JSON and Xray cloud
 * JSON are supported.
 */
export declare class ImportExecutionConverter {
    private readonly isCloudConverter;
    /**
     * The configured plugin options.
     */
    protected readonly options: InternalOptions;
    /**
     * Construct a new converter with access to the provided options. The cloud converter flag is
     * used to deduce which sub-converters to create, if necessary (for example for converting test
     * results). When set to `true`, Xray cloud JSONs will be created, if set to `false`, the format
     * will be Xray server JSON.
     *
     * @param options - the options
     * @param isCloudConverter - whether Xray cloud JSONs should be created
     */
    constructor(options: InternalOptions, isCloudConverter: boolean);
    toXrayJson(results: CypressRunResultType): Promise<IXrayTestExecutionResults>;
    private getTextExecutionResultSummary;
    private getDescription;
}
export {};
