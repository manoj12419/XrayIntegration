import { Background, Comment } from "@cucumber/messages";
/**
 * Returns an error message of any error.
 *
 * @param error - the error
 * @returns the error message
 */
export declare function errorMessage(error: unknown): string;
/**
 * An error which has been logged to a file or other log locations already.
 */
export declare class LoggedError extends Error {
}
/**
 * Assesses whether the given error is an instance of a {@link LoggedError | `LoggedError`}.
 *
 * @param error - the error
 * @returns `true` if the error is a {@link LoggedError | `LoggedError`}, otherwise `false`
 */
export declare function isLoggedError(error: unknown): boolean;
/**
 * Returns an error describing that a test issue key is missing in the title of a native Cypress
 * test case.
 *
 * @param title - the Cypress test title
 * @param projectKey - the project key
 * @returns the error
 */
export declare function missingTestKeyInNativeTestTitleError(title: string, projectKey: string): Error;
/**
 * Returns an error describing that multiple test issue keys are present in the title of a native
 * Cypress test case.
 *
 * @param title - the Cypress test title
 * @param issueKeys - the issue keys
 * @returns the error
 */
export declare function multipleTestKeysInNativeTestTitleError(title: string, issueKeys: readonly string[]): Error;
/**
 * Returns an error describing that a test issue key is missing in the tags of a Cucumber scenario.
 *
 * @param scenario - the Cucumber scenario
 * @param projectKey - the project key
 * @param expectedCloudTags - whether Xray cloud tags were expected
 * @returns the error
 */
export declare function missingTestKeyInCucumberScenarioError(scenario: {
    name: string;
    keyword: string;
}, projectKey: string, expectedCloudTags: boolean): Error;
/**
 * Returns an error describing that multiple test issue keys are present in the tags of a Cucumber
 * scenario.
 *
 * @param scenario - the Cucumber scenario
 * @param tags - the scenario tags
 * @param issueKeys - the issue keys
 * @param expectedCloudTags - whether Xray cloud tags were expected
 * @returns the error
 */
export declare function multipleTestKeysInCucumberScenarioError(scenario: {
    name: string;
    keyword: string;
}, tags: readonly {
    name: string;
}[], issueKeys: string[], expectedCloudTags: boolean): Error;
/**
 * Returns an error describing that a test issue key is missing in the comments of a Cucumber
 * background.
 *
 * @param background - the Cucumber background
 * @param projectKey - the project key
 * @param expectedCloudTags - whether Xray cloud tags were expected
 * @returns the error
 */
export declare function missingPreconditionKeyInCucumberBackgroundError(background: Background, projectKey: string, expectedCloudTags: boolean): Error;
/**
 * Returns an error describing that multiple test issue keys are present in the comments of a
 * Cucumber background.
 *
 * @param background - the Cucumber background
 * @param preconditionKeys - the issue keys
 * @param comments - the precondition comments
 * @param expectedCloudTags - whether Xray cloud tags were expected
 * @returns the error
 */
export declare function multiplePreconditionKeysInCucumberBackgroundError(background: Background, preconditionKeys: readonly string[], comments: readonly Comment[], expectedCloudTags: boolean): Error;
