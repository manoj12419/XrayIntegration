import { AxiosResponse, RawAxiosRequestConfig } from "axios";
import { InternalOpenSSLOptions } from "../types/plugin";
export type RequestConfigPost<D = unknown> = {
    url: string;
    data?: D;
    config?: RawAxiosRequestConfig<D>;
};
/**
 * Options which affect the way the requests module works.
 */
export interface RequestsOptions {
    /**
     * Turns on or off extensive debugging output.
     */
    debug?: boolean;
    /**
     * Additional OpenSSL options for the underlying HTTP agent.
     */
    openSSL?: InternalOpenSSLOptions;
}
export declare class Requests {
    private static AGENT;
    private static AXIOS;
    private static options;
    static init(options: RequestsOptions): void;
    private static agent;
    private static axios;
    private static readCertificate;
    static get(url: string, config?: RawAxiosRequestConfig<undefined>): Promise<AxiosResponse>;
    static post<D = unknown>(url: string, data?: D, config?: RawAxiosRequestConfig<D>): Promise<AxiosResponse>;
    static put<D = unknown>(url: string, data?: D, config?: RawAxiosRequestConfig<D>): Promise<AxiosResponse>;
}
